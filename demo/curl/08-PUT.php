<?php
//todo метод PUT заменяет все текущие представления ресурса
// данными запроса. Противоположность GET. GET говорит вот тебе адрес
// дай мне по нему контент, извлекает данные из ресурса.
// PUT говорит вот тебе адрес положи туда контент.
// POST отправляет данные на ресурс. Семантика PUT  в том что сам ресурс
// указывается в самом запросе, в отличии от схожего POST, куда мы отправляем
// сущности и обработчик уже сам решает что с ними делать.
  require "_header.php";  
  
  $curl = curl_init();
  //todo Сама идея - мы говорим создай по следующему адресу документ put.txt,
  // если его там нет или измени если он там существует - именно этот ресурс.
  // PUT Обычно использовать запрещено, не безопасный метод, так как он не
  // предполагает обработчика и позволяет на прямую общаться с сервером.
  curl_setopt($curl, CURLOPT_URL, HOST_NAME . "upload/put.txt");

  $str = "Hello, world!"; 
  //todo tmpfile() — Создаёт временный файл.
  // fseek() — Устанавливает смещение в файловом указателе
  $fp = tmpfile(); 
  fwrite($fp, $str); 
  fseek($fp, 0); 
//todo true для загрузки файла методом HTTP PUT.
// Используемый файл должен быть установлен с помощью
// параметров CURLOPT_INFILE и CURLOPT_INFILESIZE.
// CURLOPT_INFILESIZE	Ожидаемый размер файла в байтах при загрузке
// файла на удалённый сервер. Учтите, что использование этой опции
// не остановит дальнейшую посылку данных, превышающих это значение,
// так как посылаемые данные зависят от результата CURLOPT_READFUNCTION.
  curl_setopt($curl, CURLOPT_PUT, true); 
  curl_setopt($curl, CURLOPT_INFILE, $fp); 
  curl_setopt($curl, CURLOPT_INFILESIZE, strlen($str)); 

  $result = curl_exec($curl); 
  fclose($fp); 
  curl_close($curl); 
